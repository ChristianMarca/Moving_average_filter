;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 28/11/2017 10:31:36
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x0000000402E8  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x02E8	0x20834F  	MOV	#2100, W15
0x02EA	0x20FFF0  	MOV	#4095, W0
0x02EC	0xB7A020  	MOV	WREG, SPLIM
0x02EE	0x200000  	MOV	#0, W0
0x02F0	0xB7A034  	MOV	WREG, PSVPAG
0x02F2	0x200040  	MOV	#4, W0
0x02F4	0xB72044  	IOR	CORCON
0x02F6	0xFA0002  	LNK	#2
0x02F8	0x00000002039E  	CALL	926
;Examen.c,42 :: 		void main() {
;Examen.c,43 :: 		configuracion_incial();
0x02FC	0x781F8A  	PUSH	W10
0x02FE	0x07FFD6  	RCALL	_configuracion_incial
;Examen.c,44 :: 		while (1) {
L_main0:
;Examen.c,47 :: 		if (cont >= M-1){
0x0300	0x804000  	MOV	_M, W0
0x0302	0x5000E1  	SUB	W0, #1, W1
0x0304	0x208120  	MOV	#lo_addr(_cont), W0
0x0306	0xE10810  	CP	W1, [W0]
0x0308	0x3C0034  	BRA GT	L_main2
L__main12:
;Examen.c,49 :: 		datos[M-1]=ADC1_Read(1);
0x030A	0x804000  	MOV	_M, W0
0x030C	0xED2000  	DEC	W0
0x030E	0xDD00C1  	SL	W0, #1, W1
0x0310	0x208140  	MOV	#lo_addr(_datos), W0
0x0312	0x400001  	ADD	W0, W1, W0
0x0314	0x980700  	MOV	W0, [W14+0]
0x0316	0x20001A  	MOV	#1, W10
0x0318	0x07FFD4  	RCALL	_ADC1_Read
0x031A	0x90008E  	MOV	[W14+0], W1
0x031C	0x780880  	MOV	W0, [W1]
;Examen.c,50 :: 		suma=0;
0x031E	0xEF2000  	CLR	W0
0x0320	0x884050  	MOV	W0, _suma
;Examen.c,51 :: 		for(i=0;i<=M-1;i++){
0x0322	0xEF2000  	CLR	W0
0x0324	0x884060  	MOV	W0, _i
L_main3:
0x0326	0x804000  	MOV	_M, W0
0x0328	0x5000E1  	SUB	W0, #1, W1
0x032A	0x2080C0  	MOV	#lo_addr(_i), W0
0x032C	0xE10810  	CP	W1, [W0]
0x032E	0x350018  	BRA LT	L_main4
L__main13:
;Examen.c,52 :: 		suma=suma+datos[i];
0x0330	0x804060  	MOV	_i, W0
0x0332	0xDD00C1  	SL	W0, #1, W1
0x0334	0x208140  	MOV	#lo_addr(_datos), W0
0x0336	0x400001  	ADD	W0, W1, W0
0x0338	0x780090  	MOV	[W0], W1
0x033A	0x2080A0  	MOV	#lo_addr(_suma), W0
0x033C	0x408810  	ADD	W1, [W0], [W0]
;Examen.c,53 :: 		if(i>=1){
0x033E	0x804060  	MOV	_i, W0
0x0340	0xE10061  	CP	W0, #1
0x0342	0x35000A  	BRA LT	L_main6
L__main14:
;Examen.c,54 :: 		datos[i-1]=datos[i];
0x0344	0x804060  	MOV	_i, W0
0x0346	0xED2000  	DEC	W0
0x0348	0xDD00C1  	SL	W0, #1, W1
0x034A	0x208140  	MOV	#lo_addr(_datos), W0
0x034C	0x400101  	ADD	W0, W1, W2
0x034E	0x804060  	MOV	_i, W0
0x0350	0xDD00C1  	SL	W0, #1, W1
0x0352	0x208140  	MOV	#lo_addr(_datos), W0
0x0354	0x400001  	ADD	W0, W1, W0
0x0356	0x780910  	MOV	[W0], [W2]
;Examen.c,55 :: 		}
L_main6:
;Examen.c,51 :: 		for(i=0;i<=M-1;i++){
0x0358	0x200011  	MOV	#1, W1
0x035A	0x2080C0  	MOV	#lo_addr(_i), W0
0x035C	0x408810  	ADD	W1, [W0], [W0]
;Examen.c,56 :: 		}
0x035E	0x37FFE3  	BRA	L_main3
L_main4:
;Examen.c,57 :: 		prom=(float)(suma/M);
0x0360	0x804050  	MOV	_suma, W0
0x0362	0x804002  	MOV	_M, W2
0x0364	0x090011  	REPEAT	#17
0x0366	0xD88002  	DIV.U	W0, W2
0x0368	0xEB0080  	CLR	W1
0x036A	0x07FF09  	RCALL	__Long2Float
0x036C	0x884070  	MOV	W0, _prom
0x036E	0x884081  	MOV	W1, _prom+2
;Examen.c,58 :: 		}
0x0370	0x37000C  	BRA	L_main7
L_main2:
;Examen.c,61 :: 		datos[cont]=ADC1_Read(1);
0x0372	0x804090  	MOV	_cont, W0
0x0374	0xDD00C1  	SL	W0, #1, W1
0x0376	0x208140  	MOV	#lo_addr(_datos), W0
0x0378	0x400001  	ADD	W0, W1, W0
0x037A	0x980700  	MOV	W0, [W14+0]
0x037C	0x20001A  	MOV	#1, W10
0x037E	0x07FFA1  	RCALL	_ADC1_Read
0x0380	0x90008E  	MOV	[W14+0], W1
0x0382	0x780880  	MOV	W0, [W1]
;Examen.c,62 :: 		cont=cont+1;
0x0384	0x200011  	MOV	#1, W1
0x0386	0x208120  	MOV	#lo_addr(_cont), W0
0x0388	0x408810  	ADD	W1, [W0], [W0]
;Examen.c,63 :: 		}
L_main7:
;Examen.c,64 :: 		DAC_Output(prom);
0x038A	0x804070  	MOV	_prom, W0
0x038C	0x804081  	MOV	_prom+2, W1
0x038E	0x07FF52  	RCALL	__Float2Longint
0x0390	0x780500  	MOV	W0, W10
0x0392	0x07FF9C  	RCALL	_DAC_Output
;Examen.c,66 :: 		}
0x0394	0x37FFB5  	BRA	L_main0
;Examen.c,67 :: 		}
L_end_main:
0x0396	0x78054F  	POP	W10
0x0398	0xFA8000  	ULNK
L__main_end_loop:
0x039A	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_configuracion_incial:
;Examen.c,16 :: 		void configuracion_incial(){
;Examen.c,17 :: 		PORTB = 0x0000;
0x02AC	0xEF22C8  	CLR	PORTB
;Examen.c,18 :: 		TRISB.F1 = 1;       // set pin as input - needed for ADC to work
0x02AE	0xA822C6  	BSET	TRISB, #1
;Examen.c,19 :: 		Chip_Select = 1;                       // Deselect DAC
0x02B0	0xA802E2  	BSET	LATF0_bit, BitPos(LATF0_bit+0)
;Examen.c,20 :: 		Chip_Select_Direction = 0;             // Set CS# pin as Output
0x02B2	0xA902DE  	BCLR	TRISF0_bit, BitPos(TRISF0_bit+0)
;Examen.c,21 :: 		SPI1_Init();                           // Initialize SPI module
0x02B4	0x07FF50  	RCALL	_SPI1_Init
;Examen.c,23 :: 		pos=M-1;
0x02B6	0x804001  	MOV	_M, W1
0x02B8	0x208080  	MOV	#lo_addr(_pos), W0
0x02BA	0x508861  	SUB	W1, #1, [W0]
;Examen.c,24 :: 		cont=0;
0x02BC	0xEF2000  	CLR	W0
0x02BE	0x884090  	MOV	W0, _cont
;Examen.c,25 :: 		}
L_end_configuracion_incial:
0x02C0	0x060000  	RETURN
; end of _configuracion_incial
_SPI1_Init:
0x0156	0xFA0000  	LNK	#0
;__Lib_SPI_1.c,173 :: 		
;__Lib_SPI_1.c,175 :: 		
0x0158	0x201000  	MOV	#lo_addr(_SPI1_Read), W0
0x015A	0x884020  	MOV	W0, _SPI_Rd_Ptr
;__Lib_SPI_1.c,176 :: 		
0x015C	0x2014E0  	MOV	#lo_addr(_SPI1_Write), W0
0x015E	0x884030  	MOV	W0, _SPI_Wr_Ptr
;__Lib_SPI_1.c,178 :: 		
0x0160	0xEF2220  	CLR	SPI1STAT
;__Lib_SPI_1.c,179 :: 		
0x0162	0xEF2222  	CLR	SPI1CON
;__Lib_SPI_1.c,181 :: 		
0x0164	0xA8A222  	BSET	SPI1CON, #5
;__Lib_SPI_1.c,182 :: 		
0x0166	0xA9C222  	BCLR	SPI1CON, #6
;__Lib_SPI_1.c,184 :: 		
0x0168	0x2001C1  	MOV	#28, W1
0x016A	0x202220  	MOV	#lo_addr(SPI1CON), W0
0x016C	0x708810  	IOR	W1, [W0], [W0]
;__Lib_SPI_1.c,186 :: 		
0x016E	0x2FFFC1  	MOV	#65532, W1
0x0170	0x202220  	MOV	#lo_addr(SPI1CON), W0
0x0172	0x608810  	AND	W1, [W0], [W0]
;__Lib_SPI_1.c,187 :: 		
0x0174	0xA80223  	BSET	SPI1CON, #8
;__Lib_SPI_1.c,189 :: 		
0x0176	0xA9C220  	BCLR	SPI1STAT, #6
;__Lib_SPI_1.c,190 :: 		
0x0178	0xA8E221  	BSET	SPI1STAT, #15
;__Lib_SPI_1.c,192 :: 		
L_end_SPI1_Init:
0x017A	0xFA8000  	ULNK
0x017C	0x060000  	RETURN
; end of _SPI1_Init
_ADC1_Read:
0x02C2	0xFA0000  	LNK	#0
;__Lib_ADC_1_p24FJ_p30.c,80 :: 		
;__Lib_ADC_1_p24FJ_p30.c,81 :: 		
0x02C4	0x07FF29  	RCALL	_ADC1_Init
;__Lib_ADC_1_p24FJ_p30.c,82 :: 		
0x02C6	0x07FF34  	RCALL	_ADC1_Get_Sample
;__Lib_ADC_1_p24FJ_p30.c,83 :: 		
L_end_ADC1_Read:
0x02C8	0xFA8000  	ULNK
0x02CA	0x060000  	RETURN
; end of _ADC1_Read
_ADC1_Init:
0x0118	0xFA0000  	LNK	#0
;__Lib_ADC_1_p24FJ_p30.c,46 :: 		
;__Lib_ADC_1_p24FJ_p30.c,47 :: 		
0x011A	0x201300  	MOV	#lo_addr(_ADC1_Get_Sample), W0
0x011C	0x884010  	MOV	W0, _ADC_Get_Sample_Ptr
;__Lib_ADC_1_p24FJ_p30.c,49 :: 		
0x011E	0x200E00  	MOV	#224, W0
0x0120	0xB7A2A0  	MOV	WREG, ADCON1
;__Lib_ADC_1_p24FJ_p30.c,50 :: 		
0x0122	0xEF22A2  	CLR	ADCON2
;__Lib_ADC_1_p24FJ_p30.c,52 :: 		
0x0124	0x21F3F0  	MOV	#7999, W0
0x0126	0xB7A2A4  	MOV	WREG, ADCON3
;__Lib_ADC_1_p24FJ_p30.c,53 :: 		
0x0128	0xEF22AA  	CLR	ADCSSL
;__Lib_ADC_1_p24FJ_p30.c,54 :: 		
0x012A	0xA8E2A1  	BSET	ADCON1, #15
;__Lib_ADC_1_p24FJ_p30.c,55 :: 		
L_end_ADC1_Init:
0x012C	0xFA8000  	ULNK
0x012E	0x060000  	RETURN
; end of _ADC1_Init
_ADC1_Get_Sample:
0x0130	0xFA0000  	LNK	#0
;__Lib_ADC_1_p24FJ_p30.c,68 :: 		
;__Lib_ADC_1_p24FJ_p30.c,70 :: 		
0x0132	0x200010  	MOV	#1, W0
0x0134	0xDD000A  	SL	W0, W10, W0
0x0136	0xEA8080  	COM	W0, W1
0x0138	0x202A80  	MOV	#lo_addr(ADPCFG), W0
0x013A	0x608810  	AND	W1, [W0], [W0]
;__Lib_ADC_1_p24FJ_p30.c,71 :: 		
0x013C	0x88153A  	MOV	W10, ADCHS
;__Lib_ADC_1_p24FJ_p30.c,72 :: 		
0x013E	0xA822A0  	BSET	ADCON1, #1
;__Lib_ADC_1_p24FJ_p30.c,74 :: 		
L_ADC1_Get_Sample0:
0x0140	0xAF02A0  	BTSC	ADCON1, #0
0x0142	0x370001  	BRA	L_ADC1_Get_Sample1
;__Lib_ADC_1_p24FJ_p30.c,75 :: 		
0x0144	0x37FFFD  	BRA	L_ADC1_Get_Sample0
L_ADC1_Get_Sample1:
;__Lib_ADC_1_p24FJ_p30.c,76 :: 		
0x0146	0xA902A0  	BCLR	ADCON1, #0
;__Lib_ADC_1_p24FJ_p30.c,77 :: 		
0x0148	0xBF8280  	MOV	ADCBUF0, WREG
;__Lib_ADC_1_p24FJ_p30.c,78 :: 		
L_end_ADC1_Get_Sample:
0x014A	0xFA8000  	ULNK
0x014C	0x060000  	RETURN
; end of _ADC1_Get_Sample
_DAC_Output:
;Examen.c,26 :: 		void DAC_Output(unsigned int valueDAC) {
;Examen.c,29 :: 		Chip_Select = 0;                       // Select DAC chip
0x02CC	0xA902E2  	BCLR	LATF0_bit, BitPos(LATF0_bit+0)
;Examen.c,32 :: 		temp = (valueDAC >> 8) & 0x0F;         // Store valueDAC[11..8] to temp[3..0]
0x02CE	0xDE5048  	LSR	W10, #8, W0
0x02D0	0x60006F  	AND	W0, #15, W0
;Examen.c,33 :: 		temp |= 0x30;                          // Define DAC setting, see MCP4921 datasheet
0x02D2	0xFB8080  	ZE	W0, W1
0x02D4	0x200300  	MOV	#48, W0
0x02D6	0x708000  	IOR	W1, W0, W0
;Examen.c,34 :: 		SPI1_Write(temp);                      // Send high byte via SPI
0x02D8	0x781F8A  	PUSH	W10
0x02DA	0xFB8500  	ZE	W0, W10
0x02DC	0x07FF38  	RCALL	_SPI1_Write
0x02DE	0x78054F  	POP	W10
;Examen.c,38 :: 		SPI1_Write(temp);                      // Send low byte via SPI
0x02E0	0xFB850A  	ZE	W10, W10
0x02E2	0x07FF35  	RCALL	_SPI1_Write
;Examen.c,40 :: 		Chip_Select = 1;                       // Deselect DAC chip
0x02E4	0xA802E2  	BSET	LATF0_bit, BitPos(LATF0_bit+0)
;Examen.c,41 :: 		}
L_end_DAC_Output:
0x02E6	0x060000  	RETURN
; end of _DAC_Output
_SPI1_Write:
0x014E	0xFA0000  	LNK	#0
;__Lib_SPI_1.c,121 :: 		
;__Lib_SPI_1.c,122 :: 		
0x0150	0x07FFD7  	RCALL	_SPI1_Read
;__Lib_SPI_1.c,132 :: 		
L_end_SPI1_Write:
0x0152	0xFA8000  	ULNK
0x0154	0x060000  	RETURN
; end of _SPI1_Write
_SPI1_Read:
0x0100	0xFA0000  	LNK	#0
;__Lib_SPI_1.c,107 :: 		
;__Lib_SPI_1.c,109 :: 		
0x0102	0xA9C220  	BCLR	SPI1STAT, #6
;__Lib_SPI_1.c,111 :: 		
L_SPI1_Read0:
0x0104	0xAE2220  	BTSS	SPI1STAT, #1
0x0106	0x370001  	BRA	L_SPI1_Read1
0x0108	0x37FFFD  	BRA	L_SPI1_Read0
L_SPI1_Read1:
;__Lib_SPI_1.c,112 :: 		
0x010A	0x88112A  	MOV	W10, SPI1BUF
;__Lib_SPI_1.c,113 :: 		
L_SPI1_Read2:
0x010C	0xAF0220  	BTSC	SPI1STAT, #0
0x010E	0x370001  	BRA	L_SPI1_Read3
0x0110	0x37FFFD  	BRA	L_SPI1_Read2
L_SPI1_Read3:
;__Lib_SPI_1.c,115 :: 		
0x0112	0xBF8224  	MOV	SPI1BUF, WREG
;__Lib_SPI_1.c,119 :: 		
L_end_SPI1_Read:
0x0114	0xFA8000  	ULNK
0x0116	0x060000  	RETURN
; end of _SPI1_Read
__Long2Float:
0x017E	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,104 :: 		
;__Lib_MathDouble.c,106 :: 		
0x0180	0x070002  	RCALL	LL_intro_Long2Float
;__Lib_MathDouble.c,107 :: 		
0x0182	0x000000040230  	GOTO	the_end__Long2Float
;__Lib_MathDouble.c,109 :: 		
LL_intro_Long2Float:
;__Lib_MathDouble.c,110 :: 		
0x0186	0xE20004  	CP0	W2
;__Lib_MathDouble.c,111 :: 		
0x0188	0x3A0006  	BRA NZ	Longint2Float__floatsisf
;__Lib_MathDouble.c,113 :: 		
Longword2Float__floatuisf:
;__Lib_MathDouble.c,114 :: 		
0x018A	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,115 :: 		
0x018C	0xE20002  	CP0	W1
;__Lib_MathDouble.c,116 :: 		
0x018E	0x3E000F  	BRA GTU	Long2Float_notspecial
;__Lib_MathDouble.c,117 :: 		
0x0190	0xE20000  	CP0	W0
;__Lib_MathDouble.c,118 :: 		
0x0192	0x320027  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,119 :: 		
0x0194	0x37000C  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,121 :: 		
Longint2Float__floatsisf:
;__Lib_MathDouble.c,122 :: 		
0x0196	0x8800A1  	MOV	W1, W10
;__Lib_MathDouble.c,123 :: 		
0x0198	0xE20002  	CP0	W1
;__Lib_MathDouble.c,124 :: 		
0x019A	0x350004  	BRA LT	Longint2Float_negative
;__Lib_MathDouble.c,125 :: 		
0x019C	0x3C0008  	BRA GT	Long2Float_notspecial
;__Lib_MathDouble.c,126 :: 		
0x019E	0xE20000  	CP0	W0
;__Lib_MathDouble.c,127 :: 		
0x01A0	0x320020  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,128 :: 		
0x01A2	0x370005  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,129 :: 		
Longint2Float_negative:
;__Lib_MathDouble.c,130 :: 		
0x01A4	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,131 :: 		
0x01A6	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,132 :: 		
0x01A8	0x3B0002  	BRA NN	Long2Float_notspecial
;__Lib_MathDouble.c,133 :: 		
0x01AA	0x2CF001  	MOV	#52992, W1
;__Lib_MathDouble.c,134 :: 		
0x01AC	0x37001A  	BRA	Long2Float_return0
;__Lib_MathDouble.c,136 :: 		
Long2Float_notspecial:
;__Lib_MathDouble.c,137 :: 		
0x01AE	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,138 :: 		
0x01B0	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,139 :: 		
0x01B2	0x20096B  	MOV	#150, W11
;__Lib_MathDouble.c,140 :: 		
0x01B4	0xCF8209  	FF1L	W9, W4
;__Lib_MathDouble.c,141 :: 		
0x01B6	0x390002  	BRA NC	Long2Float_fixshift
;__Lib_MathDouble.c,142 :: 		
0x01B8	0xCF8208  	FF1L	W8, W4
;__Lib_MathDouble.c,143 :: 		
0x01BA	0xB04104  	ADD.B	#16, W4
;__Lib_MathDouble.c,144 :: 		
Long2Float_fixshift:
;__Lib_MathDouble.c,145 :: 		
0x01BC	0x524269  	SUB.B	W4, #9, W4
;__Lib_MathDouble.c,146 :: 		
0x01BE	0x32000E  	BRA Z	Long2Float_round
;__Lib_MathDouble.c,147 :: 		
0x01C0	0x3B0008  	BRA NN	Long2Float_shiftleft
;__Lib_MathDouble.c,148 :: 		
Long2Float_shiftright:
;__Lib_MathDouble.c,149 :: 		
0x01C2	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,150 :: 		
0x01C4	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,151 :: 		
0x01C6	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,152 :: 		
0x01C8	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,153 :: 		
0x01CA	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,154 :: 		
0x01CC	0xE84204  	INC.B	W4, W4
;__Lib_MathDouble.c,155 :: 		
0x01CE	0x3AFFF9  	BRA NZ	Long2Float_shiftright
;__Lib_MathDouble.c,156 :: 		
0x01D0	0x370005  	BRA	Long2Float_round
;__Lib_MathDouble.c,157 :: 		
Long2Float_shiftleft:
;__Lib_MathDouble.c,158 :: 		
0x01D2	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,159 :: 		
0x01D4	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,160 :: 		
0x01D6	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,161 :: 		
0x01D8	0xE94204  	DEC.B	W4, W4
;__Lib_MathDouble.c,162 :: 		
0x01DA	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
;__Lib_MathDouble.c,163 :: 		
Long2Float_round:
;__Lib_MathDouble.c,164 :: 		
0x01DC	0x070003  	RCALL	Long2Float__fpack
;__Lib_MathDouble.c,165 :: 		
0x01DE	0xA7F00A  	BTSC	W10, #15
;__Lib_MathDouble.c,166 :: 		
0x01E0	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,167 :: 		
Long2Float_return0:
;__Lib_MathDouble.c,168 :: 		
0x01E2	0x060000  	RETURN
;__Lib_MathDouble.c,169 :: 		
Long2Float__fpack:
;__Lib_MathDouble.c,170 :: 		
0x01E4	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,171 :: 		
0x01E6	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,172 :: 		
0x01E8	0x3D000B  	BRA GE	Long2Float_notsubnormal
;__Lib_MathDouble.c,173 :: 		
0x01EA	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,174 :: 		
0x01EC	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,175 :: 		
0x01EE	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,176 :: 		
0x01F0	0x34001D  	BRA LE	Long2Float_zerosig
;__Lib_MathDouble.c,177 :: 		
Long2Float_subnormal:
;__Lib_MathDouble.c,178 :: 		
0x01F2	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,179 :: 		
0x01F4	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,180 :: 		
0x01F6	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,181 :: 		
0x01F8	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,182 :: 		
0x01FA	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,183 :: 		
0x01FC	0x3AFFFA  	BRA NZ	Long2Float_subnormal
;__Lib_MathDouble.c,184 :: 		
0x01FE	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,185 :: 		
Long2Float_notsubnormal:
;__Lib_MathDouble.c,186 :: 		
0x0200	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,187 :: 		
0x0202	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,188 :: 		
0x0204	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,189 :: 		
0x0206	0x320009  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,190 :: 		
0x0208	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,191 :: 		
0x020A	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,192 :: 		
0x020C	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,193 :: 		
0x020E	0x320005  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,194 :: 		
0x0210	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,195 :: 		
0x0212	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,196 :: 		
0x0214	0x3A0002  	BRA NZ	Long2Float_packupandgo
;__Lib_MathDouble.c,197 :: 		
0x0216	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,198 :: 		
0x0218	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,199 :: 		
Long2Float_packupandgo:
;__Lib_MathDouble.c,200 :: 		
0x021A	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,201 :: 		
0x021C	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,202 :: 		
0x021E	0x3D0005  	BRA GE	Long2Float_overflow
;__Lib_MathDouble.c,203 :: 		
0x0220	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,204 :: 		
0x0222	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,205 :: 		
0x0224	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,206 :: 		
0x0226	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,207 :: 		
0x0228	0x060000  	RETURN
;__Lib_MathDouble.c,208 :: 		
Long2Float_overflow:
;__Lib_MathDouble.c,209 :: 		
0x022A	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,210 :: 		
Long2Float_zerosig:
;__Lib_MathDouble.c,211 :: 		
0x022C	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,212 :: 		
0x022E	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,215 :: 		
the_end__Long2Float:
;__Lib_MathDouble.c,218 :: 		
L_end__Long2Float:
0x0230	0xFA8000  	ULNK
0x0232	0x060000  	RETURN
; end of __Long2Float
__Float2Longint:
0x0234	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,479 :: 		
;__Lib_MathDouble.c,481 :: 		
0x0236	0x070002  	RCALL	Float2Longint__fixsfsi
;__Lib_MathDouble.c,482 :: 		
0x0238	0x0000000402A8  	GOTO	the_end__Float2Longint
;__Lib_MathDouble.c,486 :: 		
Float2Longint__fixsfsi:
;__Lib_MathDouble.c,487 :: 		
0x023C	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.c,488 :: 		
0x023E	0x07001F  	RCALL	Float2Longint__funpack
;__Lib_MathDouble.c,489 :: 		
0x0240	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.c,490 :: 		
0x0242	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.c,491 :: 		
0x0244	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.c,492 :: 		
0x0246	0x320016  	BRA Z	Float2Longint_setsign
;__Lib_MathDouble.c,493 :: 		
0x0248	0x35000D  	BRA LT	Float2Longint_shiftright
;__Lib_MathDouble.c,494 :: 		
0x024A	0xE12868  	CP	W5, #8
;__Lib_MathDouble.c,495 :: 		
0x024C	0x350006  	BRA LT	Float2Longint_shiftleft
;__Lib_MathDouble.c,496 :: 		
0x024E	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,497 :: 		
0x0250	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,498 :: 		
0x0252	0xE20006  	CP0	W3
;__Lib_MathDouble.c,499 :: 		
0x0254	0x3B0013  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,500 :: 		
0x0256	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.c,501 :: 		
0x0258	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,502 :: 		
Float2Longint_shiftleft:
;__Lib_MathDouble.c,503 :: 		
0x025A	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,504 :: 		
0x025C	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,505 :: 		
0x025E	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,506 :: 		
0x0260	0x3AFFFC  	BRA NZ	Float2Longint_shiftleft
;__Lib_MathDouble.c,507 :: 		
0x0262	0x370008  	BRA	Float2Longint_setsign
;__Lib_MathDouble.c,508 :: 		
Float2Longint_shiftright:
;__Lib_MathDouble.c,509 :: 		
0x0264	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.c,510 :: 		
0x0266	0x3C0002  	BRA GT	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,511 :: 		
0x0268	0xEB0080  	CLR	W1
;__Lib_MathDouble.c,512 :: 		
0x026A	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,513 :: 		
Float2Longint_shiftrightloop:
;__Lib_MathDouble.c,514 :: 		
0x026C	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.c,515 :: 		
0x026E	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,516 :: 		
0x0270	0xE80285  	INC	W5, W5
;__Lib_MathDouble.c,517 :: 		
0x0272	0x3AFFFC  	BRA NZ	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,518 :: 		
Float2Longint_setsign:
;__Lib_MathDouble.c,519 :: 		
0x0274	0xE20006  	CP0	W3
;__Lib_MathDouble.c,520 :: 		
0x0276	0x3B0002  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,521 :: 		
0x0278	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,522 :: 		
0x027A	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,523 :: 		
Float2Longint_exit:
;__Lib_MathDouble.c,524 :: 		
0x027C	0x060000  	RETURN
;__Lib_MathDouble.c,525 :: 		
Float2Longint__funpack:
;__Lib_MathDouble.c,526 :: 		
0x027E	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,527 :: 		
0x0280	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,528 :: 		
0x0282	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,529 :: 		
0x0284	0x320008  	BRA Z	Float2Longint_zeroorsub
;__Lib_MathDouble.c,530 :: 		
0x0286	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,531 :: 		
0x0288	0x320002  	BRA Z	Float2Longint_nanorinf
;__Lib_MathDouble.c,532 :: 		
Float2Longint_finitereturn:
;__Lib_MathDouble.c,533 :: 		
0x028A	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,534 :: 		
0x028C	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,535 :: 		
Float2Longint_nanorinf:
;__Lib_MathDouble.c,536 :: 		
0x028E	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,537 :: 		
0x0290	0x320001  	BRA Z	Float2Longint_infinite
;__Lib_MathDouble.c,538 :: 		
0x0292	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,539 :: 		
Float2Longint_infinite:
;__Lib_MathDouble.c,540 :: 		
0x0294	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,541 :: 		
Float2Longint_zeroorsub:
;__Lib_MathDouble.c,542 :: 		
0x0296	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,543 :: 		
0x0298	0x3A0002  	BRA NZ	Float2Longint_subnormal
;__Lib_MathDouble.c,544 :: 		
0x029A	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,545 :: 		
Float2Longint_normalize:
;__Lib_MathDouble.c,546 :: 		
0x029C	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,547 :: 		
Float2Longint_subnormal:
;__Lib_MathDouble.c,548 :: 		
0x029E	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,549 :: 		
0x02A0	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,550 :: 		
0x02A2	0x3BFFFC  	BRA NN	Float2Longint_normalize
;__Lib_MathDouble.c,551 :: 		
0x02A4	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,552 :: 		
0x02A6	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,555 :: 		
the_end__Float2Longint:
;__Lib_MathDouble.c,557 :: 		
L_end__Float2Longint:
0x02A8	0xFA8000  	ULNK
0x02AA	0x060000  	RETURN
; end of __Float2Longint
0x039E	0x208001  	MOV	#lo_addr(_M), W1
0x03A0	0x2839C0  	MOV	#33692, W0
0x03A2	0x090000  	REPEAT	#0
0x03A4	0x7818B0  	MOV	[W0++], [W1++]
0x03A6	0x060000  	RETURN
;Examen.c,0 :: ?ICS_M [2]
0x039C	0x0010 ;?ICS_M+0
; end of ?ICS_M
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100      [24]    _SPI1_Read
0x0118      [24]    _ADC1_Init
0x0130      [30]    _ADC1_Get_Sample
0x014E       [8]    _SPI1_Write
0x0156      [40]    _SPI1_Init
0x017E     [182]    __Long2Float
0x0234     [120]    __Float2Longint
0x02AC      [22]    _configuracion_incial
0x02C2      [10]    _ADC1_Read
0x02CC      [28]    _DAC_Output
0x02E8     [180]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0280       [2]    ADCBUF0
0x0802       [2]    _ADC_Get_Sample_Ptr
0x02A2       [2]    ADCON2
0x02A8       [2]    ADPCFG
0x02A6       [2]    ADCHS
0x02A0       [2]    ADCON1
0x02A4       [2]    ADCON3
0x0804       [2]    _SPI_Rd_Ptr
0x0806       [2]    _SPI_Wr_Ptr
0x0222       [2]    SPI1CON
0x02AA       [2]    ADCSSL
0x0220       [2]    SPI1STAT
0x0224       [2]    SPI1BUF
0x02C6       [2]    TRISB
0x02DE       [0]    Chip_Select_Direction
0x02DE       [0]    TRISF0_bit
0x02E2       [0]    Chip_Select
0x02E2       [0]    LATF0_bit
0x02C8       [2]    PORTB
0x0808       [2]    _pos
0x080A       [2]    _suma
0x080C       [2]    _i
0x080E       [4]    _prom
0x0812       [2]    _cont
0x0814      [32]    _datos
0x0800       [2]    _M
0x0014       [2]    FARG_SPI1_Read_buffer
0x0014       [2]    FARG_ADC1_Get_Sample_channel
0x0014       [2]    FARG_SPI1_Write_data_out
0x0220       [2]    SPI1STAT
0x0222       [2]    SPI1CON
0x0224       [2]    SPI1BUF
0x0280       [2]    ADCBUF0
0x02A0       [2]    ADCON1
0x02A2       [2]    ADCON2
0x02A4       [2]    ADCON3
0x02A6       [2]    ADCHS
0x02A8       [2]    ADPCFG
0x02AA       [2]    ADCSSL
0x0014       [2]    FARG_ADC1_Read_channel
0x02C6       [2]    TRISB
0x02C8       [2]    PORTB
0x0014       [2]    FARG_DAC_Output_valueDAC
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x039C       [2]    ?ICS_M
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_end_map
  _map
  L_end_configuracion_incial
  _configuracion_incial
  L_end_DAC_Output
  _DAC_Output
  L_end_main
  _main
  L__main12
  L__main13
  L__main14
  L__main_end_loop
  L_ADC1_Get_Sample0
  L_ADC1_Get_Sample1
  L_end_ADC1_Init
  _ADC1_Init
  L_end_ADC1_Init_Advanced
  _ADC1_Init_Advanced
  L_end_ADC1_Get_Sample
  _ADC1_Get_Sample
  L_end_ADC1_Read
  _ADC1_Read
  Float__fpack
  the_end_Float__fpack
  Float_notsubnormal
  Float_zerosig
  Float_subnormal
  Float_packupandgo
  Float_overflow
  LL_intro_Long2Float
  the_end__Long2Float
  Longint2Float__floatsisf
  Longword2Float__floatuisf
  Long2Float_notspecial
  Long2Float_return0
  Longint2Float_negative
  Long2Float_fixshift
  Long2Float_round
  Long2Float_shiftleft
  Long2Float_shiftright
  Long2Float__fpack
  Long2Float_notsubnormal
  Long2Float_zerosig
  Long2Float_subnormal
  Long2Float_packupandgo
  Long2Float_overflow
  Longlong2Float_floatdisf
  the_end__LongLong2Float
  Longlong2Float_negative
  Longlong2Float_notspecial
  Longlong2Float_return0
  Longlong2Float_fixshift
  Longlong2Float_round
  Longlong2Float_shiftleft
  Longlong2Float_shiftright
  Float2Longword_fixunssfsi
  the_end__Float2Longword
  Float2Longword_funpack
  Float2Longword_returnzero
  Float2Longword_exit
  Float2Longword_shiftright
  Float2Longword_shiftleft
  Float2Longword_shiftrightloop
  Float2Longword_zeroorsub
  Float2Longword_nanorinf
  Float2Longword_finitereturn
  Float2Longword_infinite
  Float2Longword_subnormal
  Float2Longword_normalize
  Float2Longint__fixsfsi
  the_end__Float2Longint
  Float2Longint__funpack
  Float2Longint_setsign
  Float2Longint_shiftright
  Float2Longint_shiftleft
  Float2Longint_exit
  Float2Longint_shiftrightloop
  Float2Longint_zeroorsub
  Float2Longint_nanorinf
  Float2Longint_finitereturn
  Float2Longint_infinite
  Float2Longint_subnormal
  Float2Longint_normalize
  AddSubFP__addsf3
  the_end__AddSub_FP
  AddSubFP__funpack2
  AddSubFP__fPropagateNaN
  AddSubFP_aisinfinite
  AddSubFP_checkspecialb
  AddSubFP_return2_3
  AddSubFP_getsign
  AddSubFP_gotsign
  AddSubFP_expcanonical
  AddSubFP_nonegate
  AddSubFP_aligniter
  AddSubFP_signoff
  AddSubFP_align
  AddSubFP_aligned
  AddSubFP_normalizesum
  AddSubFP_checknormal
  AddSubFP_round
  AddSubFP_discardguard
  AddSubFP_underflow
  AddSubFP_normalizeloop
  AddSubFP_normalizeexit
  AddSubFP_normalizetest
  AddSubFP__fpack
  AddSubFP__fbopExit
  AddSubFP_return8_3
  AddSubFP__fbopReturnNaN
  AddSubFP__funpack
  AddSubFP_return0_1
  AddSubFP_return8_1
  AddSubFP_notsubnormal_1
  AddSubFP_zerosig
  AddSubFP_subnormal_1
  AddSubFP_packupandgo
  AddSubFP_overflow
  AddSubFP_zeroorsub
  AddSubFP_nanorinf
  AddSubFP_finitereturn
  AddSubFP_infinite
  AddSubFP_subnormal_2
  AddSubFP_normalize
  MulFP___mulsf3
  the_end__Mul_FP
  MulFP__funpack2
  MulFP__fPropagateNaN
  MulFP_aisinfinite
  MulFP_bisinfinite
  MulFP_return8_1
  MulFP_return2_1
  MulFP_formsticky
  MulFP_formRandSig
  MulFP__fpack
  MulFP_return0_1
  MulFP__fbopExit
  MulFP__fbopReturnNaN
  MulFP__funpack
  MulFP_return0_2
  MulFP_return8_2
  MulFP_notsubnormal
  MulFP_zerosig
  MulFP_subnormal1
  MulFP_packupandgo
  MulFP_overflow
  MulFP_zeroorsub
  MulFP_nanorinf
  MulFP_finitereturn
  MulFP_infinite
  MulFP_subnormal2
  MulFP_normalize
  DivFP___divsf3
  the_end__Div_FP
  DivFP__funpack2
  DivFP__fPropagateNaN
  DivFP_aisinfinite
  DivFP_returnZero
  DivFP_aiszero
  DivFP_returnInf
  DivFP_finitenonzero
  DivFP_diventry
  DivFP_divnext
  DivFP_divdone
  DivFP_divloop
  DivFP_stickyok
  DivFP_guardused
  DivFP__fpack
  DivFP_return0_1
  DivFP__fbopExit
  DivFP__fbopReturnNaN
  DivFP_return8_1
  DivFP_return2_1
  DivFP__funpack
  DivFP_return0
  DivFP_return8
  DivFP_notsubnormal
  DivFP_zerosig
  DivFP_subnormal
  DivFP_packupandgo
  DivFP_overfloW
  DivFP_zeroorsub
  DivFP_nanorinf
  DivFP_finitereturn
  DivFP_infinite
  DivFP_subnormal2
  DivFP_normalize
  CompareFp__fcompare
  the_end__Compare_Fp
  CompareFp__funpack2
  CompareFp_exit
  CompareFp_comparemag
  CompareFp_returnEqual
  CompareFp_adjust
  CompareFp__funpack
  CompareFp_zeroorsub
  CompareFp_nanorinf
  CompareFp_finitereturn
  CompareFp_infinite
  CompareFp_subnormal
  CompareFp_normalize
  L_end_Float_fpack
  _Float_fpack
  L_end__Long2Float
  __Long2Float
  L_end__LongLong2Float
  __LongLong2Float
  L_end__Float2Longword
  __Float2Longword
  L_end__Float2Longint
  __Float2Longint
  L_end__AddSub_FP
  __AddSub_FP
  L_end__Sub_FP
  __Sub_FP
  L_end__Mul_FP
  __Mul_FP
  L_end__Div_FP
  __Div_FP
  L_end__Compare_Fp
  __Compare_Fp
  L_end__Compare_Le_Fp
  __Compare_Le_Fp
  L_end__Compare_Ge_Fp
  __Compare_Ge_Fp
  L_SPI1_Read0
  L_SPI1_Read1
  L_SPI1_Read2
  L_SPI1_Read3
  L_end_SPI1_Read
  _SPI1_Read
  L_end_SPI1_Write
  _SPI1_Write
  L_end_SPI1_Init_Advanced
  _SPI1_Init_Advanced
  L_end_SPI1_Init
  _SPI1_Init
  L_end_SPI_Set_Active
  _SPI_Set_Active
  L_end_SPI_Read
  _SPI_Read
  L_end_SPI_Write
  _SPI_Write
